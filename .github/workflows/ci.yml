name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Run vet
        run: go vet ./...

      - name: Run staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        with:
          version: "2023.1.7"

  buf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Buf
        uses: bufbuild/buf-action@v1
        with:
          version: "1.35.0"
          token: ${{ secrets.BUF_TOKEN }}
          input: "."
          format: true
          lint: true
          breaking: true
          breaking_against: '.git#branch=main'

  build:
    runs-on: ubuntu-latest
    needs: [test, buf]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
          go build -ldflags "-s -w" -trimpath -o protogentag .

      - name: Test binary
        run: |
          ./protogentag --help || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: protogentag-binary
          path: protogentag
